// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProductService.Data;

#nullable disable

namespace ProductService.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20250817205623_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProductService.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Televizyon",
                            CreatedAt = new DateTime(2025, 8, 17, 20, 56, 23, 588, DateTimeKind.Utc).AddTicks(3832),
                            Description = "55 inç 4K Ultra HD Smart LED TV",
                            IsActive = true,
                            Name = "Samsung 55\" 4K Smart TV",
                            Price = 8999.99m
                        },
                        new
                        {
                            Id = 2,
                            Category = "Telefon",
                            CreatedAt = new DateTime(2025, 8, 17, 20, 56, 23, 588, DateTimeKind.Utc).AddTicks(3836),
                            Description = "Apple iPhone 15 Pro 128GB Titanium",
                            IsActive = true,
                            Name = "iPhone 15 Pro 128GB",
                            Price = 54999.99m
                        },
                        new
                        {
                            Id = 3,
                            Category = "Bilgisayar",
                            CreatedAt = new DateTime(2025, 8, 17, 20, 56, 23, 588, DateTimeKind.Utc).AddTicks(3838),
                            Description = "Apple MacBook Air M2 13 inç 256GB SSD",
                            IsActive = true,
                            Name = "MacBook Air M2 13\" 256GB",
                            Price = 39999.99m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
